{"remainingRequest":"/home/bruno/Estudos/Vue 2 course/section 18 - the stock trader/stock-trader/node_modules/babel-loader/lib/index.js!/home/bruno/Estudos/Vue 2 course/section 18 - the stock trader/stock-trader/node_modules/eslint-loader/index.js??ref--13-0!/home/bruno/Estudos/Vue 2 course/section 18 - the stock trader/stock-trader/src/store/modules/portfolio.js","dependencies":[{"path":"/home/bruno/Estudos/Vue 2 course/section 18 - the stock trader/stock-trader/src/store/modules/portfolio.js","mtime":1612291975537},{"path":"/home/bruno/Estudos/Vue 2 course/section 18 - the stock trader/stock-trader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bruno/Estudos/Vue 2 course/section 18 - the stock trader/stock-trader/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bruno/Estudos/Vue 2 course/section 18 - the stock trader/stock-trader/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nexport default {\n  state: {\n    funds: 10000,\n    stocks: []\n  },\n  mutations: {\n    buyStock: function buyStock(state, _ref) {\n      var stockId = _ref.stockId,\n          quantity = _ref.quantity,\n          stockPrice = _ref.stockPrice;\n      var record = state.stocks.find(function (element) {\n        return element.id == stockId;\n      });\n\n      if (record) {\n        record.quantity += quantity;\n      } else {\n        state.stocks.push({\n          id: stockId,\n          quantity: quantity\n        });\n      }\n\n      state.funds -= stockPrice * quantity;\n    },\n    sellStock: function sellStock(state, _ref2) {\n      var stockId = _ref2.stockId,\n          quantity = _ref2.quantity,\n          stockPrice = _ref2.stockPrice;\n      var record = state.stocks.find(function (element) {\n        return element.id == stockId;\n      });\n\n      if (record.quantity > quantity) {\n        record.quantity -= quantity;\n      } else {\n        state.stocks.splice(state.stocks.indexOf(record), 1);\n      }\n\n      state.funds += stockPrice * quantity;\n    }\n  },\n  actions: {\n    sellStock: function sellStock(_ref3, order) {\n      var commit = _ref3.commit;\n      commit(\"sellStock\", order);\n    }\n  },\n  getters: {\n    stockPortfolio: function stockPortfolio(state, getters) {\n      return state.stocks.map(function (stock) {\n        var record = getters.stocks.find(function (element) {\n          return element.id == stock.id;\n        });\n        return {\n          id: stock.id,\n          quantity: stock.quantity,\n          name: record.name,\n          price: record.price\n        };\n      });\n    },\n    funds: function funds(state) {\n      return state.funds;\n    }\n  }\n};",{"version":3,"sources":["/home/bruno/Estudos/Vue 2 course/section 18 - the stock trader/stock-trader/src/store/modules/portfolio.js"],"names":["state","funds","stocks","mutations","buyStock","stockId","quantity","stockPrice","record","find","element","id","push","sellStock","splice","indexOf","actions","order","commit","getters","stockPortfolio","map","stock","name","price"],"mappings":";;AAAA,eAAe;AACbA,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,KADF;AAELC,IAAAA,MAAM,EAAE;AAFH,GADM;AAKbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QADS,oBACAJ,KADA,QAC0C;AAAA,UAAjCK,OAAiC,QAAjCA,OAAiC;AAAA,UAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,UAAdC,UAAc,QAAdA,UAAc;AACjD,UAAMC,MAAM,GAAGR,KAAK,CAACE,MAAN,CAAaO,IAAb,CAAkB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,EAAR,IAAcN,OAAlB;AAAA,OAAzB,CAAf;;AAEA,UAAIG,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACF,QAAP,IAAmBA,QAAnB;AACD,OAFD,MAEO;AACLN,QAAAA,KAAK,CAACE,MAAN,CAAaU,IAAb,CAAkB;AAChBD,UAAAA,EAAE,EAAEN,OADY;AAEhBC,UAAAA,QAAQ,EAAEA;AAFM,SAAlB;AAID;;AAEDN,MAAAA,KAAK,CAACC,KAAN,IAAeM,UAAU,GAAGD,QAA5B;AACD,KAdQ;AAeTO,IAAAA,SAfS,qBAeCb,KAfD,SAe2C;AAAA,UAAjCK,OAAiC,SAAjCA,OAAiC;AAAA,UAAxBC,QAAwB,SAAxBA,QAAwB;AAAA,UAAdC,UAAc,SAAdA,UAAc;AAClD,UAAMC,MAAM,GAAGR,KAAK,CAACE,MAAN,CAAaO,IAAb,CAAkB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,EAAR,IAAcN,OAAlB;AAAA,OAAzB,CAAf;;AAEA,UAAIG,MAAM,CAACF,QAAP,GAAkBA,QAAtB,EAAgC;AAC9BE,QAAAA,MAAM,CAACF,QAAP,IAAmBA,QAAnB;AACD,OAFD,MAEO;AACLN,QAAAA,KAAK,CAACE,MAAN,CAAaY,MAAb,CAAoBd,KAAK,CAACE,MAAN,CAAaa,OAAb,CAAqBP,MAArB,CAApB,EAAkD,CAAlD;AACD;;AAEDR,MAAAA,KAAK,CAACC,KAAN,IAAeM,UAAU,GAAGD,QAA5B;AACD;AAzBQ,GALE;AAgCbU,EAAAA,OAAO,EAAE;AACPH,IAAAA,SADO,4BACeI,KADf,EACsB;AAAA,UAAjBC,MAAiB,SAAjBA,MAAiB;AAC3BA,MAAAA,MAAM,CAAC,WAAD,EAAcD,KAAd,CAAN;AACD;AAHM,GAhCI;AAqCbE,EAAAA,OAAO,EAAE;AACPC,IAAAA,cADO,0BACQpB,KADR,EACemB,OADf,EACwB;AAC7B,aAAOnB,KAAK,CAACE,MAAN,CAAamB,GAAb,CAAiB,UAAAC,KAAK,EAAI;AAC/B,YAAMd,MAAM,GAAGW,OAAO,CAACjB,MAAR,CAAeO,IAAf,CAAoB,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAACC,EAAR,IAAcW,KAAK,CAACX,EAAxB;AAAA,SAA3B,CAAf;AACA,eAAO;AACLA,UAAAA,EAAE,EAAEW,KAAK,CAACX,EADL;AAELL,UAAAA,QAAQ,EAAEgB,KAAK,CAAChB,QAFX;AAGLiB,UAAAA,IAAI,EAAEf,MAAM,CAACe,IAHR;AAILC,UAAAA,KAAK,EAAEhB,MAAM,CAACgB;AAJT,SAAP;AAMD,OARM,CAAP;AASD,KAXM;AAYPvB,IAAAA,KAZO,iBAYDD,KAZC,EAYM;AACX,aAAOA,KAAK,CAACC,KAAb;AACD;AAdM;AArCI,CAAf","sourcesContent":["export default {\n  state: {\n    funds: 10000,\n    stocks: [],\n  },\n  mutations: {\n    buyStock(state, { stockId, quantity, stockPrice }) {\n      const record = state.stocks.find(element => element.id == stockId);\n\n      if (record) {\n        record.quantity += quantity;\n      } else {\n        state.stocks.push({\n          id: stockId,\n          quantity: quantity,\n        });\n      }\n\n      state.funds -= stockPrice * quantity;\n    },\n    sellStock(state, { stockId, quantity, stockPrice }) {\n      const record = state.stocks.find(element => element.id == stockId);\n\n      if (record.quantity > quantity) {\n        record.quantity -= quantity;\n      } else {\n        state.stocks.splice(state.stocks.indexOf(record), 1);\n      }\n\n      state.funds += stockPrice * quantity;\n    },\n  },\n  actions: {\n    sellStock({ commit }, order) {\n      commit(\"sellStock\", order);\n    },\n  },\n  getters: {\n    stockPortfolio(state, getters) {\n      return state.stocks.map(stock => {\n        const record = getters.stocks.find(element => element.id == stock.id);\n        return {\n          id: stock.id,\n          quantity: stock.quantity,\n          name: record.name,\n          price: record.price,\n        };\n      });\n    },\n    funds(state) {\n      return state.funds;\n    },\n  },\n};\n"]}]}